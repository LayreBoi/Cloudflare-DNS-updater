name: Build App

on: [push, workflow_dispatch]

env:
  CARGO_TERM_COLOR: always
  APP_NAME: cloudflare_dns_updater

jobs:
  build-linux:
    strategy:
      fail-fast: false
      matrix:
        targetPlatform: 
          - x86_64
          # - i686
          # - aarch64
          # - mips
          # - mipsel
    name: "🐧 Compile for Linux"
    runs-on: ubuntu-latest
    steps:
    - name: 🛎 Checkout
      uses: actions/checkout@v2
    # - name: Install linker (multilib)
    #   run: "sudo apt install gcc-multilib -y"
    # - name: Install linker (mips)
    #   run: "sudo apt install gcc-mips-linux-gnu -y"
    # - name: Install linker (mipsel)
    #   run: "sudo apt install gcc-mipsel-linux-gnu -y"
    # - name: Install linker (aarch64)
    #   run: "sudo apt install gcc-aarch64-linux-gnu -y"
    - name: 🗳 Add Target
      run: "rustup target add ${{matrix.targetPlatform}}-unknown-linux-gnu"
    - name: 🛠 Build
      run: cargo build --target ${{matrix.targetPlatform}}-unknown-linux-gnu --release
    - name: 🧪 Run tests
      run: cargo test --release
    - name: 💎 Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{env.APP_NAME}}_compiled_linux_${{matrix.targetPlatform}}
        path: target/${{matrix.targetPlatform}}-unknown-linux-gnu/release/${{env.APP_NAME}}

  build-windows:
    name: "❄ Compile for Windows"
    runs-on: windows-latest
    steps:
    - name: 🛎 Checkout
      uses: actions/checkout@v2
    - name: 🛠 Build
      run: cargo build --release
    - name: 🧪 Run tests
      run: cargo test --release
    - name: 💎 Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{env.APP_NAME}}_compiled_windows
        path: target/release/${{env.APP_NAME}}.exe

  build-macos:
    name: "🍎 Compile for MacOS"
    runs-on: macos-latest
    steps:
    - name: 🛎 Checkout
      uses: actions/checkout@v2
    - name: 🛠 Build
      run: cargo build --release
    - name: 🧪 Run tests
      run: cargo test --release
    - name: 💎 Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{env.APP_NAME}}_compiled_macos
        path: target/release/${{env.APP_NAME}}
    

  create-release:
    name: "📦 Create Release"
    runs-on: ubuntu-latest
    # runs-on: self-hosted
    needs: [build-linux, build-macos, build-windows]
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      
      # Yes we get the repo again but only for the version in the package.json
      - name: 🛎 Checkout
        uses: actions/checkout@v2
      - name: ⚡ Set Version Variable
        id: version
        run: >
          echo "::set-output name=value::$(cargo pkgid | cut -d# -f2 | cut -d: -f2)"
     
      # The release script that prepares a new Github release
      - name: ⚡ Create Release
        uses: actions/create-release@v1
        id: create_release
        continue-on-error: true
        with:
          draft: false
          prerelease: false
          release_name: Cloudflare DNS Updater v${{ steps.version.outputs.value }}
          tag_name: v${{ steps.version.outputs.value }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

  upload: 
    name: "📤 Upload Builds"
    runs-on: ubuntu-latest
    # runs-on: self-hosted
    needs: create-release
    strategy:
      matrix: 
       targetPlatform:
          - linux_x86_64
          - windows
          - macos
      fail-fast: false
    steps:

      # Download the artifacts
      - name: 💎 Download ${{matrix.targetPlatform}} Binaries
        uses: actions/download-artifact@v2
        with:
          name: ${{env.APP_NAME}}_compiled_${{matrix.targetPlatform}}
          path: build

      # Upload Release
      - name: 💎 Upload ${{matrix.targetPlatform}} Artifact
        uses: actions/upload-release-asset@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: build/${{ matrix.targetPlatform == 'windows' && 'cloudflare_dns_updater.exe' || 'cloudflare_dns_updater' }}
          asset_name: ${{env.APP_NAME}}.${{matrix.targetPlatform}}
          asset_content_type: application/octet-stream
